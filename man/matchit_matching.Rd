% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchit_matching.R
\name{matchit_matching}
\alias{matchit_matching}
\title{Interfaces with the MatchIt package to create a matched dataset as specifed by the user}
\usage{
matchit_matching(exposure, covariates, df, d = "logit", ratio = 1)
}
\arguments{
\item{exposure}{Character value. The name of a binary column in a data frame that represents the cases and controls that need to be matched}

\item{covariates}{Character value/vector. The name(s) of the columns that the user wants to match the cases and controls on.}

\item{df}{The data frame set for matching}

\item{d}{the method in which distance between a matched case and control is measured as specified by MatchIt. Defaults to "logit"}

\item{ratio}{Integer. number of controls that should be matched to each case. Defaults to 1}
}
\value{
A data frame where each case from the exposure column is matched to a set number of controls based on the named covariates.
}
\description{
Uses MatchIt package as a way of adjusting for covariates. Matches cases to controls from the set "exposure" column
Note that users are limited to the greedy "nearest" method, though they may enter in different distance calculation methods
}
\examples{
#creates the causal diagram
confounder_dag = HydeNetwork(~B|A + C|A + D|B*C)

#adds set effect sizes and distributions to the causal diagram
confounder_dag = setNode(my_dag, A, nodeType = "dbern", prob = 0.5)
confounder_dag = setNode(my_dag, B, nodeType = "dnorm", mu = paste0(1," * A + ",0 - 1*0.5), tau = 1)
confounder_dag = setNode(my_dag, C, nodeType = "dbern", prob = paste0("ilogit(",0.8," * A + ",set_p(0.1, 0.8*0.5),")"))
confounder_dag = setNode(my_dag, D, nodeType = "dbern", prob = paste0("ilogit(",0.05," * B + ", 1.2," * C + ",set_p(0.25, 1.2 * 0.1 + 0.05 * 0 ),")"))

#create data creates a single dataset.
#This lets users see if the simulated datasets behave as expected before committing to a large simulation with many iterations

sim_data = create_data(confounder_dag, 10000)
lm(B~C, sim_data)

matched_data = matchit_matching("C", "A", sim_data, ratio = 6)
lm(B~C, matched_data)

#Node A acts as a confounder in this example. We can see that the when "A" is adjusted on the relationship between "B" and "C" shifts towards 0.
}
\seealso{
\code{\link[=varied_runs]{varied_runs()}}
}
