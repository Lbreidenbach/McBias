% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Hydenet_compileDecisionModel.R
\name{compileDecisionModel}
\alias{compileDecisionModel}
\title{Compile JAGS Models to Evaluate the Effect of Decisions in a Network}
\usage{
compileDecisionModel(network, policyMatrix = NULL, ..., data = NULL)
}
\arguments{
\item{network}{A HydeNet object with decision nodes defined.}

\item{policyMatrix}{A data frame of policies to apply to decision nodes
for comparing networks under different conditions.  See
\code{\link{policyMatrix}}.}

\item{...}{Additional arguments to pass to \code{jags.model}, excepting
the \code{data} argument.  The \code{data} argument is created by
\code{compileDecisionModel}, and cannot be passed manually.}

\item{data}{An optional list of data values to be observed in the nodes.
It is passed to the \code{data} argument of \code{rjags::jags}. Any
values given in \code{data} will override values provided in
\code{policyMatrix} with a warning.}
}
\value{
Returns a list of \code{compiledHydeNetwork} objects.
}
\description{
Nodes at which a decision can be made, such as the decision to
test or not test; treat or not treat; or use open or robotic surgery may
impact the outcome for a subject.  These types of decisions may not be
truly random and understanding how these decisions may impact downstream
outcomes may be beneficial to making the decision.  Compiling the decision
network permits the network to be evaluated under the conditions of each
set of decisions separately.
}
\details{
\code{compileDecisionModel} only accepts nodes of type \code{"dbern"}
(Bernoulli random variable taking either 0 or 1) or \code{"dcat"}
(categorical variables) as decision nodes.
When the node is type \code{"dcat"}, the
decision options are extracted from the JAGS statement returned by
\code{writeJagsModel}.

The options for each decision node (if there are multiple nodes) are
combined via \code{expand.grid} to make a table of all possible decisions.
Each row of this table is passed as a list to the \code{data} argument
of \code{jags.model} (via \code{compileJagsModel}) and a list of JAGS
model objects is returned.  \code{coda.samples} may be run on each of these
models.
}
\examples{
#creates the causal diagram
my_dag = HydeNetwork(~B|A + C|A + D|B*C)

#adds set effect sizes and distributions to the causal diagram
my_dag = setNode(my_dag, A, nodeType = "dbern", prob = 0.5)
my_dag = setNode(my_dag, B, nodeType = "dnorm", mu = paste0(0.2," * A + ",0 - 0.2*0.5), tau = 1)
my_dag = setNode(my_dag, C, nodeType = "dbern", prob = paste0("ilogit(",0.8," * A + ",set_p(0.9, 0.8*0.5),")"))
my_dag = setNode(my_dag, D, nodeType = "dbern", prob = paste0("ilogit(",0.05," * B + ", 1.2," * C + ",set_p(0.25, 1.2 * 0.9 + 0.05 * 0 ),")"))

#ScenarioMatrix object
ideal_run = varied_runs(runs = 100, dag = my_dag, exposure = "B", outcome = "C", covariates = "A", n = 1000)

#Gives a dataframe of values for quantifying the bias and its effects on the reject null rate
beta_summary(ideal_run)

#Creates a ridgeline plot to help with bias and coverage visualization
ci_ridges(ideal_run)
}
\seealso{
\code{\link{policyMatrix}} \code{\link{compileJagsModel}}
}
\author{
Jarrod Dalton and Benjamin Nutter
}
